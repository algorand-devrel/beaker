{
    "hints": {
        "get_app_state_val": {
            "read_only": true
        },
        "get_reserved_app_state_val": {
            "read_only": true
        },
        "get_account_state_val": {
            "read_only": true
        },
        "get_reserved_account_state_val": {
            "read_only": true
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMTI3IDEKYnl0ZWNibG9jayAweDE1MWY3Yzc1IDB4MDAgMHg2NDY1NjM2YzYxNzI2NTY0NWY2MTcwNzA1Zjc2NjE2Yzc1NjUgMHg2NDY1NjM2YzYxNzI2NTY0NWY2MTYzNjM2Zjc1NmU3NDVmNzY2MTZjNzU2NSAweDAwMDEwMjAzMDQwNTA2MDcwODA5MGEwYjBjMGQwZTBmIDB4MDAwMTAyIDB4CnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wyOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGFhNmExZDc5IC8vICJ3cml0ZV9hY2N0X2Jsb2Ioc3RyaW5nKXZvaWQiCj09CmJueiBtYWluX2wyNwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDVhMjM0YTkwIC8vICJyZWFkX2FjY3RfYmxvYigpYnl0ZVtdIgo9PQpibnogbWFpbl9sMjYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgzZWIyNDVmYSAvLyAid3JpdGVfYXBwX2Jsb2Ioc3RyaW5nKXZvaWQiCj09CmJueiBtYWluX2wyNQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGQ1Yzk1ZjZjIC8vICJyZWFkX2FwcF9ibG9iKClieXRlW10iCj09CmJueiBtYWluX2wyNAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDI5ZDk0NzBmIC8vICJzZXRfYXBwX3N0YXRlX3ZhbChzdHJpbmcpdm9pZCIKPT0KYm56IG1haW5fbDIzCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZjRjMjI1NjYgLy8gImdldF9hcHBfc3RhdGVfdmFsKClzdHJpbmciCj09CmJueiBtYWluX2wyMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDA2YmM4NjA0IC8vICJzZXRfcmVzZXJ2ZWRfYXBwX3N0YXRlX3ZhbCh1aW50OCx1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDIxCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZTk4NGUzYzMgLy8gImdldF9yZXNlcnZlZF9hcHBfc3RhdGVfdmFsKHVpbnQ4KXVpbnQ2NCIKPT0KYm56IG1haW5fbDIwCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZmU2MGI1MmEgLy8gInNldF9hY2NvdW50X3N0YXRlX3ZhbCh1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDE5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YjhkYzliNTkgLy8gImluY3JfYWNjb3VudF9zdGF0ZV92YWwodWludDY0KXZvaWQiCj09CmJueiBtYWluX2wxOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDVhOThmMzcyIC8vICJnZXRfYWNjb3VudF9zdGF0ZV92YWwoKXVpbnQ2NCIKPT0KYm56IG1haW5fbDE3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZTZlNjBhZGUgLy8gInNldF9yZXNlcnZlZF9hY2NvdW50X3N0YXRlX3ZhbCh1aW50OCxzdHJpbmcpdm9pZCIKPT0KYm56IG1haW5fbDE2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Y2JhMzM3N2UgLy8gImdldF9yZXNlcnZlZF9hY2NvdW50X3N0YXRlX3ZhbCh1aW50OClzdHJpbmciCj09CmJueiBtYWluX2wxNQplcnIKbWFpbl9sMTU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKaW50Y18wIC8vIDAKZ2V0Ynl0ZQpjYWxsc3ViIGdldHJlc2VydmVkYWNjb3VudHN0YXRldmFsXzIyCnN0b3JlIDQ2CmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpsb2FkIDQ2CmNvbmNhdApsb2cKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDE2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgNDQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSA0NQpsb2FkIDQ0CmxvYWQgNDUKY2FsbHN1YiBzZXRyZXNlcnZlZGFjY291bnRzdGF0ZXZhbF8yMQppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMTc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZ2V0YWNjb3VudHN0YXRldmFsXzIwCnN0b3JlIDQzCmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpsb2FkIDQzCml0b2IKY29uY2F0CmxvZwppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMTg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpjYWxsc3ViIGluY3JhY2NvdW50c3RhdGV2YWxfMTkKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDE5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKY2FsbHN1YiBzZXRhY2NvdW50c3RhdGV2YWxfMTgKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDIwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKY2FsbHN1YiBnZXRyZXNlcnZlZGFwcHN0YXRldmFsXzE3CnN0b3JlIDQxCmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpsb2FkIDQxCml0b2IKY29uY2F0CmxvZwppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMjE6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKaW50Y18wIC8vIDAKZ2V0Ynl0ZQpzdG9yZSAzOQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKc3RvcmUgNDAKbG9hZCAzOQpsb2FkIDQwCmNhbGxzdWIgc2V0cmVzZXJ2ZWRhcHBzdGF0ZXZhbF8xNgppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMjI6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZ2V0YXBwc3RhdGV2YWxfMTUKc3RvcmUgMzcKYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CmxvYWQgMzcKY29uY2F0CmxvZwppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMjM6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBzZXRhcHBzdGF0ZXZhbF8xNAppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMjQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgcmVhZGFwcGJsb2JfMTMKc3RvcmUgMzUKYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CmxvYWQgMzUKY29uY2F0CmxvZwppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sMjU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiB3cml0ZWFwcGJsb2JfMTIKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDI2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWRhY2N0YmxvYl8xMQpzdG9yZSAzMwpieXRlY18wIC8vIDB4MTUxZjdjNzUKbG9hZCAzMwpjb25jYXQKbG9nCmludGNfMiAvLyAxCnJldHVybgptYWluX2wyNzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpjYWxsc3ViIHdyaXRlYWNjdGJsb2JfMTAKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDI4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wzMgp0eG4gT25Db21wbGV0aW9uCmludGNfMiAvLyBPcHRJbgo9PQpibnogbWFpbl9sMzEKZXJyCm1haW5fbDMxOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl83CmludGNfMiAvLyAxCnJldHVybgptYWluX2wzMjoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzYKaW50Y18yIC8vIDEKcmV0dXJuCgovLyB6ZXJvX2ltcGwKemVyb2ltcGxfMDoKaW50Y18xIC8vIDEyNwpiemVybwpwdXNoaW50IDE2IC8vIDE2CgogICAgemVyb19sb29wOgogICAgICAgIGludCAxCiAgICAgICAgLSAgICAgICAgICAgICAgIC8vIFsiMDAiKnBhZ2Vfc2l6ZSwga2V5LTFdCiAgICAgICAgZHVwMiAgICAgICAgICAgIC8vIFsiMDAiKnBhZ2Vfc2l6ZSwga2V5LCAiMDAiKnBhZ2Vfc2l6ZSwga2V5XQogICAgICAgIGl0b2IgICAgICAgICAgICAvLyBbIjAwIipwYWdlX3NpemUsIGtleSwgIjAwIipwYWdlX3NpemUsIGl0b2Ioa2V5KV0KICAgICAgICBleHRyYWN0IDcgMSAgICAgLy8gWyIwMCIqcGFnZV9zaXplLCBrZXksICIwMCIqcGFnZV9zaXplLCBpdG9iKGtleSlbLTFdXQogICAgICAgIHN3YXAgICAgICAgICAgICAvLyBbIjAwIipwYWdlX3NpemUsIGtleSwgaXRvYihrZXkpWy0xXSwgIjAwIipwYWdlX3NpemVdCiAgICAgICAgYXBwX2dsb2JhbF9wdXQgIC8vIFsiMDAiKnBhZ2Vfc2l6ZSwga2V5XSAgKHJlbW92ZXMgdG9wIDIgZWxlbWVudHMpCiAgICAgICAgZHVwICAgICAgICAgICAgIC8vIFsiMDAiKnBhZ2Vfc2l6ZSwga2V5LTEsIGtleS0xXQogICAgICAgIGJueiB6ZXJvX2xvb3AgICAvLyBzdGFydCBsb29wIG92ZXIgaWYga2V5LTE+MAogICAgICAgIHBvcAogICAgICAgIHBvcCAgICAgICAgICAgICAvLyB0YWtlIGV4dHJhIGp1bmsgb2ZmIHRoZSBzdGFjawogICAgICAgIHJldHN1YgogICAgY2FsbHN1YiB6ZXJvX2xvb3AKICAgICAgICAgICAgCnJldHN1YgoKLy8gcmVhZF9pbXBsCnJlYWRpbXBsXzE6CnN0b3JlIDI4CnN0b3JlIDI3CmJ5dGVjIDYgLy8gIiIKc3RvcmUgMzAKbG9hZCAyNwppbnRjXzEgLy8gMTI3Ci8Kc3RvcmUgMjkKcmVhZGltcGxfMV9sMToKbG9hZCAyOQpsb2FkIDI4CmludGNfMSAvLyAxMjcKLwo8PQpieiByZWFkaW1wbF8xX2w5CmxvYWQgMjkKbG9hZCAyNwppbnRjXzEgLy8gMTI3Ci8KPT0KYm56IHJlYWRpbXBsXzFfbDgKaW50Y18wIC8vIDAKcmVhZGltcGxfMV9sNDoKc3RvcmUgMzEKbG9hZCAyOQpsb2FkIDI4CmludGNfMSAvLyAxMjcKLwo9PQpibnogcmVhZGltcGxfMV9sNwppbnRjXzEgLy8gMTI3CnJlYWRpbXBsXzFfbDY6CnN0b3JlIDMyCmxvYWQgMzAKYnl0ZWMgNCAvLyAweDAwMDEwMjAzMDQwNTA2MDcwODA5MGEwYjBjMGQwZTBmCmxvYWQgMjkKaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2dsb2JhbF9nZXQKbG9hZCAzMQpsb2FkIDMyCnN1YnN0cmluZzMKY29uY2F0CnN0b3JlIDMwCmxvYWQgMjkKaW50Y18yIC8vIDEKKwpzdG9yZSAyOQpiIHJlYWRpbXBsXzFfbDEKcmVhZGltcGxfMV9sNzoKbG9hZCAyOAppbnRjXzEgLy8gMTI3CiUKYiByZWFkaW1wbF8xX2w2CnJlYWRpbXBsXzFfbDg6CmxvYWQgMjcKaW50Y18xIC8vIDEyNwolCmIgcmVhZGltcGxfMV9sNApyZWFkaW1wbF8xX2w5Ogpsb2FkIDMwCnJldHN1YgoKLy8gd3JpdGVfaW1wbAp3cml0ZWltcGxfMjoKc3RvcmUgMjEKc3RvcmUgMjAKaW50Y18wIC8vIDAKc3RvcmUgMjUKbG9hZCAyMAppbnRjXzEgLy8gMTI3Ci8Kc3RvcmUgMjIKd3JpdGVpbXBsXzJfbDE6CmxvYWQgMjIKbG9hZCAyMApsb2FkIDIxCmxlbgorCmludGNfMSAvLyAxMjcKLwo8PQpieiB3cml0ZWltcGxfMl9sMTIKbG9hZCAyMgpsb2FkIDIwCmludGNfMSAvLyAxMjcKLwo9PQpibnogd3JpdGVpbXBsXzJfbDExCmludGNfMCAvLyAwCndyaXRlaW1wbF8yX2w0OgpzdG9yZSAyMwpsb2FkIDIyCmxvYWQgMjAKbG9hZCAyMQpsZW4KKwppbnRjXzEgLy8gMTI3Ci8KPT0KYm56IHdyaXRlaW1wbF8yX2wxMAppbnRjXzEgLy8gMTI3CndyaXRlaW1wbF8yX2w2OgpzdG9yZSAyNApieXRlYyA0IC8vIDB4MDAwMTAyMDMwNDA1MDYwNzA4MDkwYTBiMGMwZDBlMGYKbG9hZCAyMgppbnRjXzIgLy8gMQpleHRyYWN0Mwpsb2FkIDI0CmludGNfMSAvLyAxMjcKIT0KbG9hZCAyMwppbnRjXzAgLy8gMAohPQp8fApibnogd3JpdGVpbXBsXzJfbDkKaW50Y18xIC8vIDEyNwpzdG9yZSAyNgpsb2FkIDIxCmxvYWQgMjUKaW50Y18xIC8vIDEyNwpleHRyYWN0Mwp3cml0ZWltcGxfMl9sODoKYXBwX2dsb2JhbF9wdXQKbG9hZCAyNQpsb2FkIDI2CisKc3RvcmUgMjUKbG9hZCAyMgppbnRjXzIgLy8gMQorCnN0b3JlIDIyCmIgd3JpdGVpbXBsXzJfbDEKd3JpdGVpbXBsXzJfbDk6CmxvYWQgMjQKbG9hZCAyMwotCnN0b3JlIDI2CmJ5dGVjIDQgLy8gMHgwMDAxMDIwMzA0MDUwNjA3MDgwOTBhMGIwYzBkMGUwZgpsb2FkIDIyCmludGNfMiAvLyAxCmV4dHJhY3QzCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCmxvYWQgMjMKc3Vic3RyaW5nMwpsb2FkIDIxCmxvYWQgMjUKbG9hZCAyNgpleHRyYWN0Mwpjb25jYXQKYnl0ZWMgNCAvLyAweDAwMDEwMjAzMDQwNTA2MDcwODA5MGEwYjBjMGQwZTBmCmxvYWQgMjIKaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2dsb2JhbF9nZXQKbG9hZCAyNAppbnRjXzEgLy8gMTI3CnN1YnN0cmluZzMKY29uY2F0CmIgd3JpdGVpbXBsXzJfbDgKd3JpdGVpbXBsXzJfbDEwOgpsb2FkIDIwCmxvYWQgMjEKbGVuCisKaW50Y18xIC8vIDEyNwolCmIgd3JpdGVpbXBsXzJfbDYKd3JpdGVpbXBsXzJfbDExOgpsb2FkIDIwCmludGNfMSAvLyAxMjcKJQpiIHdyaXRlaW1wbF8yX2w0CndyaXRlaW1wbF8yX2wxMjoKcmV0c3ViCgovLyB6ZXJvX2ltcGwKemVyb2ltcGxfMzoKc3RvcmUgNApsb2FkIDQKYnl0ZWNfMSAvLyAweDAwCmludGNfMSAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApsb2FkIDQKcHVzaGJ5dGVzIDB4MDEgLy8gMHgwMQppbnRjXzEgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKbG9hZCA0CnB1c2hieXRlcyAweDAyIC8vIDB4MDIKaW50Y18xIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CnJldHN1YgoKLy8gcmVhZF9pbXBsCnJlYWRpbXBsXzQ6CnN0b3JlIDE1CnN0b3JlIDE0CnN0b3JlIDEzCmJ5dGVjIDYgLy8gIiIKc3RvcmUgMTcKbG9hZCAxNAppbnRjXzEgLy8gMTI3Ci8Kc3RvcmUgMTYKcmVhZGltcGxfNF9sMToKbG9hZCAxNgpsb2FkIDE1CmludGNfMSAvLyAxMjcKLwo8PQpieiByZWFkaW1wbF80X2w5CmxvYWQgMTYKbG9hZCAxNAppbnRjXzEgLy8gMTI3Ci8KPT0KYm56IHJlYWRpbXBsXzRfbDgKaW50Y18wIC8vIDAKcmVhZGltcGxfNF9sNDoKc3RvcmUgMTgKbG9hZCAxNgpsb2FkIDE1CmludGNfMSAvLyAxMjcKLwo9PQpibnogcmVhZGltcGxfNF9sNwppbnRjXzEgLy8gMTI3CnJlYWRpbXBsXzRfbDY6CnN0b3JlIDE5CmxvYWQgMTcKbG9hZCAxMwpieXRlYyA1IC8vIDB4MDAwMTAyCmxvYWQgMTYKaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2xvY2FsX2dldApsb2FkIDE4CmxvYWQgMTkKc3Vic3RyaW5nMwpjb25jYXQKc3RvcmUgMTcKbG9hZCAxNgppbnRjXzIgLy8gMQorCnN0b3JlIDE2CmIgcmVhZGltcGxfNF9sMQpyZWFkaW1wbF80X2w3Ogpsb2FkIDE1CmludGNfMSAvLyAxMjcKJQpiIHJlYWRpbXBsXzRfbDYKcmVhZGltcGxfNF9sODoKbG9hZCAxNAppbnRjXzEgLy8gMTI3CiUKYiByZWFkaW1wbF80X2w0CnJlYWRpbXBsXzRfbDk6CmxvYWQgMTcKcmV0c3ViCgovLyB3cml0ZV9pbXBsCndyaXRlaW1wbF81OgpzdG9yZSA3CnN0b3JlIDYKc3RvcmUgNQppbnRjXzAgLy8gMApzdG9yZSAxMQpsb2FkIDYKaW50Y18xIC8vIDEyNwovCnN0b3JlIDgKd3JpdGVpbXBsXzVfbDE6CmxvYWQgOApsb2FkIDYKbG9hZCA3CmxlbgorCmludGNfMSAvLyAxMjcKLwo8PQpieiB3cml0ZWltcGxfNV9sMTIKbG9hZCA4CmxvYWQgNgppbnRjXzEgLy8gMTI3Ci8KPT0KYm56IHdyaXRlaW1wbF81X2wxMQppbnRjXzAgLy8gMAp3cml0ZWltcGxfNV9sNDoKc3RvcmUgOQpsb2FkIDgKbG9hZCA2CmxvYWQgNwpsZW4KKwppbnRjXzEgLy8gMTI3Ci8KPT0KYm56IHdyaXRlaW1wbF81X2wxMAppbnRjXzEgLy8gMTI3CndyaXRlaW1wbF81X2w2OgpzdG9yZSAxMApsb2FkIDUKYnl0ZWMgNSAvLyAweDAwMDEwMgpsb2FkIDgKaW50Y18yIC8vIDEKZXh0cmFjdDMKbG9hZCAxMAppbnRjXzEgLy8gMTI3CiE9CmxvYWQgOQppbnRjXzAgLy8gMAohPQp8fApibnogd3JpdGVpbXBsXzVfbDkKaW50Y18xIC8vIDEyNwpzdG9yZSAxMgpsb2FkIDcKbG9hZCAxMQppbnRjXzEgLy8gMTI3CmV4dHJhY3QzCndyaXRlaW1wbF81X2w4OgphcHBfbG9jYWxfcHV0CmxvYWQgMTEKbG9hZCAxMgorCnN0b3JlIDExCmxvYWQgOAppbnRjXzIgLy8gMQorCnN0b3JlIDgKYiB3cml0ZWltcGxfNV9sMQp3cml0ZWltcGxfNV9sOToKbG9hZCAxMApsb2FkIDkKLQpzdG9yZSAxMgpsb2FkIDUKYnl0ZWMgNSAvLyAweDAwMDEwMgpsb2FkIDgKaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2xvY2FsX2dldAppbnRjXzAgLy8gMApsb2FkIDkKc3Vic3RyaW5nMwpsb2FkIDcKbG9hZCAxMQpsb2FkIDEyCmV4dHJhY3QzCmNvbmNhdApsb2FkIDUKYnl0ZWMgNSAvLyAweDAwMDEwMgpsb2FkIDgKaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2xvY2FsX2dldApsb2FkIDEwCmludGNfMSAvLyAxMjcKc3Vic3RyaW5nMwpjb25jYXQKYiB3cml0ZWltcGxfNV9sOAp3cml0ZWltcGxfNV9sMTA6CmxvYWQgNgpsb2FkIDcKbGVuCisKaW50Y18xIC8vIDEyNwolCmIgd3JpdGVpbXBsXzVfbDYKd3JpdGVpbXBsXzVfbDExOgpsb2FkIDYKaW50Y18xIC8vIDEyNwolCmIgd3JpdGVpbXBsXzVfbDQKd3JpdGVpbXBsXzVfbDEyOgpyZXRzdWIKCi8vIGNyZWF0ZQpjcmVhdGVfNjoKaW50Y18wIC8vIDAKYnl0ZWNfMiAvLyAiZGVjbGFyZWRfYXBwX3ZhbHVlIgphcHBfZ2xvYmFsX2dldF9leApzdG9yZSAzCnN0b3JlIDIKbG9hZCAzCiEKYXNzZXJ0CmJ5dGVjXzIgLy8gImRlY2xhcmVkX2FwcF92YWx1ZSIKcHVzaGJ5dGVzIDB4NDEyMDY0NjU2MzZjNjE3MjY1NjQyMDczNzQ2MTc0NjUyMDc2NjE2Yzc1NjUyMDc0Njg2MTc0MjA2OTczMjA3MDcyNmY3NDY1NjM3NDY1NjQyMDc3Njk3NDY4MjA3NDY4NjUyMDYwNzM3NDYxNzQ2OTYzNjAyMDY2NmM2MTY3IC8vICJBIGRlY2xhcmVkIHN0YXRlIHZhbHVlIHRoYXQgaXMgcHJvdGVjdGVkIHdpdGggdGhlIGBzdGF0aWNgIGZsYWciCmFwcF9nbG9iYWxfcHV0CmNhbGxzdWIgemVyb2ltcGxfMApyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl83Ogp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gImRlY2xhcmVkX2FjY291bnRfdmFsdWUiCmludGNfMiAvLyAxCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpjYWxsc3ViIHplcm9pbXBsXzMKcmV0c3ViCgovLyBwcmVmaXhfa2V5X2dlbgpwcmVmaXhrZXlnZW5fODoKc3RvcmUgMApwdXNoYnl0ZXMgMHg3MjY1NzM2NTcyNzY2NTY0NWY2MTcwNzA1Zjc2NjE2Yzc1NjUgLy8gInJlc2VydmVkX2FwcF92YWx1ZSIKbG9hZCAwCmNvbmNhdApyZXRzdWIKCi8vIHByZWZpeF9rZXlfZ2VuCnByZWZpeGtleWdlbl85OgpzdG9yZSAxCnB1c2hieXRlcyAweDcyNjU3MzY1NzI3NjY1NjQ1ZjYxNjM2MzZmNzU2ZTc0NWY3NjYxNmM3NTY1IC8vICJyZXNlcnZlZF9hY2NvdW50X3ZhbHVlIgpsb2FkIDEKY29uY2F0CnJldHN1YgoKLy8gd3JpdGVfYWNjdF9ibG9iCndyaXRlYWNjdGJsb2JfMTA6CnN0b3JlIDQ5CnR4biBTZW5kZXIKaW50Y18wIC8vIDAKbG9hZCA0OQpleHRyYWN0IDIgMApjYWxsc3ViIHdyaXRlaW1wbF81CnJldHN1YgoKLy8gcmVhZF9hY2N0X2Jsb2IKcmVhZGFjY3RibG9iXzExOgp0eG4gU2VuZGVyCmludGNfMCAvLyAwCnB1c2hpbnQgMzgxIC8vIDM4MQppbnRjXzIgLy8gMQotCmNhbGxzdWIgcmVhZGltcGxfNApzdG9yZSAzNApsb2FkIDM0CmxlbgppdG9iCmV4dHJhY3QgNiAwCmxvYWQgMzQKY29uY2F0CnN0b3JlIDM0CmxvYWQgMzQKcmV0c3ViCgovLyB3cml0ZV9hcHBfYmxvYgp3cml0ZWFwcGJsb2JfMTI6CnN0b3JlIDUwCmludGNfMCAvLyAwCmxvYWQgNTAKZXh0cmFjdCAyIDAKY2FsbHN1YiB3cml0ZWltcGxfMgpyZXRzdWIKCi8vIHJlYWRfYXBwX2Jsb2IKcmVhZGFwcGJsb2JfMTM6CmludGNfMCAvLyAwCnB1c2hpbnQgMjAzMiAvLyAyMDMyCmludGNfMiAvLyAxCi0KY2FsbHN1YiByZWFkaW1wbF8xCnN0b3JlIDM2CmxvYWQgMzYKbGVuCml0b2IKZXh0cmFjdCA2IDAKbG9hZCAzNgpjb25jYXQKc3RvcmUgMzYKbG9hZCAzNgpyZXRzdWIKCi8vIHNldF9hcHBfc3RhdGVfdmFsCnNldGFwcHN0YXRldmFsXzE0OgpzdG9yZSA1MQppbnRjXzAgLy8gMApieXRlY18yIC8vICJkZWNsYXJlZF9hcHBfdmFsdWUiCmFwcF9nbG9iYWxfZ2V0X2V4CnN0b3JlIDUzCnN0b3JlIDUyCmxvYWQgNTMKIQphc3NlcnQKYnl0ZWNfMiAvLyAiZGVjbGFyZWRfYXBwX3ZhbHVlIgpsb2FkIDUxCmV4dHJhY3QgMiAwCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gZ2V0X2FwcF9zdGF0ZV92YWwKZ2V0YXBwc3RhdGV2YWxfMTU6CmJ5dGVjXzIgLy8gImRlY2xhcmVkX2FwcF92YWx1ZSIKYXBwX2dsb2JhbF9nZXQKc3RvcmUgMzgKbG9hZCAzOApsZW4KaXRvYgpleHRyYWN0IDYgMApsb2FkIDM4CmNvbmNhdApzdG9yZSAzOApsb2FkIDM4CnJldHN1YgoKLy8gc2V0X3Jlc2VydmVkX2FwcF9zdGF0ZV92YWwKc2V0cmVzZXJ2ZWRhcHBzdGF0ZXZhbF8xNjoKc3RvcmUgNTUKc3RvcmUgNTQKYnl0ZWNfMSAvLyAweDAwCmludGNfMCAvLyAwCmxvYWQgNTQKc2V0Ynl0ZQpjYWxsc3ViIHByZWZpeGtleWdlbl84CmxvYWQgNTUKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBnZXRfcmVzZXJ2ZWRfYXBwX3N0YXRlX3ZhbApnZXRyZXNlcnZlZGFwcHN0YXRldmFsXzE3OgpzdG9yZSA0MgpieXRlY18xIC8vIDB4MDAKaW50Y18wIC8vIDAKbG9hZCA0MgpzZXRieXRlCmNhbGxzdWIgcHJlZml4a2V5Z2VuXzgKYXBwX2dsb2JhbF9nZXQKcmV0c3ViCgovLyBzZXRfYWNjb3VudF9zdGF0ZV92YWwKc2V0YWNjb3VudHN0YXRldmFsXzE4OgpzdG9yZSA1Ngp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gImRlY2xhcmVkX2FjY291bnRfdmFsdWUiCmxvYWQgNTYKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIGluY3JfYWNjb3VudF9zdGF0ZV92YWwKaW5jcmFjY291bnRzdGF0ZXZhbF8xOToKc3RvcmUgNTcKdHhuIFNlbmRlcgpieXRlY18zIC8vICJkZWNsYXJlZF9hY2NvdW50X3ZhbHVlIgp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gImRlY2xhcmVkX2FjY291bnRfdmFsdWUiCmFwcF9sb2NhbF9nZXQKbG9hZCA1NworCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBnZXRfYWNjb3VudF9zdGF0ZV92YWwKZ2V0YWNjb3VudHN0YXRldmFsXzIwOgp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gImRlY2xhcmVkX2FjY291bnRfdmFsdWUiCmFwcF9sb2NhbF9nZXQKcmV0c3ViCgovLyBzZXRfcmVzZXJ2ZWRfYWNjb3VudF9zdGF0ZV92YWwKc2V0cmVzZXJ2ZWRhY2NvdW50c3RhdGV2YWxfMjE6CnN0b3JlIDU5CnN0b3JlIDU4CnR4biBTZW5kZXIKYnl0ZWNfMSAvLyAweDAwCmludGNfMCAvLyAwCmxvYWQgNTgKc2V0Ynl0ZQpjYWxsc3ViIHByZWZpeGtleWdlbl85CmxvYWQgNTkKZXh0cmFjdCAyIDAKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIGdldF9yZXNlcnZlZF9hY2NvdW50X3N0YXRlX3ZhbApnZXRyZXNlcnZlZGFjY291bnRzdGF0ZXZhbF8yMjoKc3RvcmUgNDcKdHhuIFNlbmRlcgpieXRlY18xIC8vIDB4MDAKaW50Y18wIC8vIDAKbG9hZCA0NwpzZXRieXRlCmNhbGxzdWIgcHJlZml4a2V5Z2VuXzkKYXBwX2xvY2FsX2dldApzdG9yZSA0OApsb2FkIDQ4CmxlbgppdG9iCmV4dHJhY3QgNiAwCmxvYWQgNDgKY29uY2F0CnN0b3JlIDQ4CmxvYWQgNDgKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {
                "declared_account_value": {
                    "type": "uint64",
                    "key": "declared_account_value",
                    "descr": "An int stored for each account that opts in"
                }
            },
            "reserved": {
                "reserved_account_value": {
                    "type": "bytes",
                    "max_keys": 8,
                    "descr": "A reserved state value, allowing 8 keys to be reserved, in this case byte type"
                }
            }
        },
        "global": {
            "declared": {
                "declared_app_value": {
                    "type": "bytes",
                    "key": "declared_app_value",
                    "descr": "A static declared variable, nothing at the protocol level protects it, only the methods defined on ApplicationState do"
                }
            },
            "reserved": {
                "reserved_app_value": {
                    "type": "uint64",
                    "max_keys": 32,
                    "descr": "A reserved app state variable, with 32 possible keys"
                }
            }
        }
    },
    "contract": {
        "name": "StateExample",
        "methods": [
            {
                "name": "write_acct_blob",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "read_acct_blob",
                "args": [],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "write_app_blob",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "read_app_blob",
                "args": [],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "set_app_state_val",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_app_state_val",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "set_reserved_app_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    },
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_reserved_app_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "set_account_state_val",
                "args": [
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "incr_account_state_val",
                "args": [
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_account_state_val",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "set_reserved_account_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    },
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_reserved_account_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    }
}