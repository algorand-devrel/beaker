#pragma version 8
intcblock 0 127 1
bytecblock 0x151f7c75 0x 0x00 0x6465636c617265645f6170705f76616c7565 0x6465636c617265645f6163636f756e745f76616c7565 0x000102 0x000102030405060708090a0b0c0d0e0f
txn NumAppArgs
intc_0 // 0
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0xaa6a1d79 // "write_acct_blob(string)void"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0x5a234a90 // "read_acct_blob()byte[]"
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0x3eb245fa // "write_app_blob(string)void"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0xd5c95f6c // "read_app_blob()byte[]"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0x29d9470f // "set_app_state_val(string)void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0xf4c22566 // "get_app_state_val()string"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x06bc8604 // "set_reserved_app_state_val(uint8,uint64)void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xe984e3c3 // "get_reserved_app_state_val(uint8)uint64"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0xfe60b52a // "set_account_state_val(uint64)void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0xb8dc9b59 // "incr_account_state_val(uint64)void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x5a98f372 // "get_account_state_val()uint64"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0xe6e60ade // "set_reserved_account_state_val(uint8,string)void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0xcba3377e // "get_reserved_account_state_val(uint8)string"
==
bnz main_l15
err
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub getreservedaccountstateval_22
store 31
bytec_0 // 0x151f7c75
load 31
concat
log
intc_2 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 29
txna ApplicationArgs 2
store 30
load 29
load 30
callsub setreservedaccountstateval_21
intc_2 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getaccountstateval_20
store 28
bytec_0 // 0x151f7c75
load 28
itob
concat
log
intc_2 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub incraccountstateval_19
intc_2 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub setaccountstateval_18
intc_2 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub getreservedappstateval_17
store 27
bytec_0 // 0x151f7c75
load 27
itob
concat
log
intc_2 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 25
txna ApplicationArgs 2
btoi
store 26
load 25
load 26
callsub setreservedappstateval_16
intc_2 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getappstateval_15
store 24
bytec_0 // 0x151f7c75
load 24
concat
log
intc_2 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub setappstateval_14
intc_2 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readappblob_13
store 23
bytec_0 // 0x151f7c75
load 23
concat
log
intc_2 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub writeappblob_12
intc_2 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readacctblob_11
store 22
bytec_0 // 0x151f7c75
load 22
concat
log
intc_2 // 1
return
main_l27:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub writeacctblob_10
intc_2 // 1
return
main_l28:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l32
txn OnCompletion
intc_2 // OptIn
==
bnz main_l31
err
main_l31:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_9
intc_2 // 1
return
main_l32:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_8
intc_2 // 1
return

// zero_impl
zeroimpl_0:
proto 1 0
frame_dig -1
bytec_2 // 0x00
intc_1 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x01 // 0x01
intc_1 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x02 // 0x02
intc_1 // 127
bzero
app_local_put
retsub

// read_impl
readimpl_1:
proto 3 1
bytec_1 // ""
store 8
frame_dig -2
intc_1 // 127
/
store 7
readimpl_1_l1:
load 7
frame_dig -1
intc_1 // 127
/
<=
bz readimpl_1_l9
load 7
frame_dig -2
intc_1 // 127
/
==
bnz readimpl_1_l8
intc_0 // 0
readimpl_1_l4:
store 9
load 7
frame_dig -1
intc_1 // 127
/
==
bnz readimpl_1_l7
intc_1 // 127
readimpl_1_l6:
store 10
load 8
frame_dig -3
bytec 5 // 0x000102
load 7
intc_2 // 1
extract3
app_local_get
load 9
load 10
substring3
concat
store 8
load 7
intc_2 // 1
+
store 7
b readimpl_1_l1
readimpl_1_l7:
frame_dig -1
intc_1 // 127
%
b readimpl_1_l6
readimpl_1_l8:
frame_dig -2
intc_1 // 127
%
b readimpl_1_l4
readimpl_1_l9:
load 8
retsub

// write_impl
writeimpl_2:
proto 3 0
intc_0 // 0
store 5
frame_dig -2
intc_1 // 127
/
store 2
writeimpl_2_l1:
load 2
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
<=
bz writeimpl_2_l12
load 2
frame_dig -2
intc_1 // 127
/
==
bnz writeimpl_2_l11
intc_0 // 0
writeimpl_2_l4:
store 3
load 2
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
==
bnz writeimpl_2_l10
intc_1 // 127
writeimpl_2_l6:
store 4
frame_dig -3
bytec 5 // 0x000102
load 2
intc_2 // 1
extract3
load 4
intc_1 // 127
!=
load 3
intc_0 // 0
!=
||
bnz writeimpl_2_l9
intc_1 // 127
store 6
frame_dig -1
load 5
intc_1 // 127
extract3
writeimpl_2_l8:
app_local_put
load 5
load 6
+
store 5
load 2
intc_2 // 1
+
store 2
b writeimpl_2_l1
writeimpl_2_l9:
load 4
load 3
-
store 6
frame_dig -3
bytec 5 // 0x000102
load 2
intc_2 // 1
extract3
app_local_get
intc_0 // 0
load 3
substring3
frame_dig -1
load 5
load 6
extract3
concat
frame_dig -3
bytec 5 // 0x000102
load 2
intc_2 // 1
extract3
app_local_get
load 4
intc_1 // 127
substring3
concat
b writeimpl_2_l8
writeimpl_2_l10:
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
%
b writeimpl_2_l6
writeimpl_2_l11:
frame_dig -2
intc_1 // 127
%
b writeimpl_2_l4
writeimpl_2_l12:
retsub

// zero_impl
zeroimpl_3:
proto 0 0
intc_1 // 127
bzero
pushint 16 // 16

    zero_loop:
        int 1
        -               // ["00"*page_size, key-1]
        dup2            // ["00"*page_size, key, "00"*page_size, key]
        itob            // ["00"*page_size, key, "00"*page_size, itob(key)]
        extract 7 1     // ["00"*page_size, key, "00"*page_size, itob(key)[-1]]
        swap            // ["00"*page_size, key, itob(key)[-1], "00"*page_size]
        app_global_put  // ["00"*page_size, key]  (removes top 2 elements)
        dup             // ["00"*page_size, key-1, key-1]
        bnz zero_loop   // start loop over if key-1>0
        pop
        pop             // take extra junk off the stack
        retsub
    callsub zero_loop
            
retsub

// read_impl
readimpl_4:
proto 2 1
bytec_1 // ""
store 17
frame_dig -2
intc_1 // 127
/
store 16
readimpl_4_l1:
load 16
frame_dig -1
intc_1 // 127
/
<=
bz readimpl_4_l9
load 16
frame_dig -2
intc_1 // 127
/
==
bnz readimpl_4_l8
intc_0 // 0
readimpl_4_l4:
store 18
load 16
frame_dig -1
intc_1 // 127
/
==
bnz readimpl_4_l7
intc_1 // 127
readimpl_4_l6:
store 19
load 17
bytec 6 // 0x000102030405060708090a0b0c0d0e0f
load 16
intc_2 // 1
extract3
app_global_get
load 18
load 19
substring3
concat
store 17
load 16
intc_2 // 1
+
store 16
b readimpl_4_l1
readimpl_4_l7:
frame_dig -1
intc_1 // 127
%
b readimpl_4_l6
readimpl_4_l8:
frame_dig -2
intc_1 // 127
%
b readimpl_4_l4
readimpl_4_l9:
load 17
retsub

// write_impl
writeimpl_5:
proto 2 0
intc_0 // 0
store 14
frame_dig -2
intc_1 // 127
/
store 11
writeimpl_5_l1:
load 11
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
<=
bz writeimpl_5_l12
load 11
frame_dig -2
intc_1 // 127
/
==
bnz writeimpl_5_l11
intc_0 // 0
writeimpl_5_l4:
store 12
load 11
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
==
bnz writeimpl_5_l10
intc_1 // 127
writeimpl_5_l6:
store 13
bytec 6 // 0x000102030405060708090a0b0c0d0e0f
load 11
intc_2 // 1
extract3
load 13
intc_1 // 127
!=
load 12
intc_0 // 0
!=
||
bnz writeimpl_5_l9
intc_1 // 127
store 15
frame_dig -1
load 14
intc_1 // 127
extract3
writeimpl_5_l8:
app_global_put
load 14
load 15
+
store 14
load 11
intc_2 // 1
+
store 11
b writeimpl_5_l1
writeimpl_5_l9:
load 13
load 12
-
store 15
bytec 6 // 0x000102030405060708090a0b0c0d0e0f
load 11
intc_2 // 1
extract3
app_global_get
intc_0 // 0
load 12
substring3
frame_dig -1
load 14
load 15
extract3
concat
bytec 6 // 0x000102030405060708090a0b0c0d0e0f
load 11
intc_2 // 1
extract3
app_global_get
load 13
intc_1 // 127
substring3
concat
b writeimpl_5_l8
writeimpl_5_l10:
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
%
b writeimpl_5_l6
writeimpl_5_l11:
frame_dig -2
intc_1 // 127
%
b writeimpl_5_l4
writeimpl_5_l12:
retsub

// prefix_key_gen
prefixkeygen_6:
proto 1 1
pushbytes 0x72657365727665645f6163636f756e745f76616c7565 // "reserved_account_value"
frame_dig -1
concat
retsub

// prefix_key_gen
prefixkeygen_7:
proto 1 1
pushbytes 0x72657365727665645f6170705f76616c7565 // "reserved_app_value"
frame_dig -1
concat
retsub

// create
create_8:
proto 0 0
callsub zeroimpl_3
intc_0 // 0
bytec_3 // "declared_app_value"
app_global_get_ex
store 1
store 0
load 1
!
assert
bytec_3 // "declared_app_value"
pushbytes 0x41206465636c617265642073746174652076616c756520746861742069732070726f74656374656420776974682074686520607374617469636020666c6167 // "A declared state value that is protected with the `static` flag"
app_global_put
retsub

// opt_in
optin_9:
proto 0 0
txn Sender
callsub zeroimpl_0
txn Sender
bytec 4 // "declared_account_value"
intc_2 // 1
app_local_put
retsub

// write_acct_blob
writeacctblob_10:
proto 1 0
txn Sender
intc_0 // 0
frame_dig -1
extract 2 0
callsub writeimpl_2
retsub

// read_acct_blob
readacctblob_11:
proto 0 1
bytec_1 // ""
txn Sender
intc_0 // 0
pushint 381 // 381
intc_2 // 1
-
callsub readimpl_1
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// write_app_blob
writeappblob_12:
proto 1 0
intc_0 // 0
frame_dig -1
extract 2 0
callsub writeimpl_5
retsub

// read_app_blob
readappblob_13:
proto 0 1
bytec_1 // ""
intc_0 // 0
pushint 2032 // 2032
intc_2 // 1
-
callsub readimpl_4
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// set_app_state_val
setappstateval_14:
proto 1 0
intc_0 // 0
bytec_3 // "declared_app_value"
app_global_get_ex
store 21
store 20
load 21
!
assert
bytec_3 // "declared_app_value"
frame_dig -1
extract 2 0
app_global_put
retsub

// get_app_state_val
getappstateval_15:
proto 0 1
bytec_1 // ""
bytec_3 // "declared_app_value"
app_global_get
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// set_reserved_app_state_val
setreservedappstateval_16:
proto 2 0
bytec_2 // 0x00
intc_0 // 0
frame_dig -2
setbyte
callsub prefixkeygen_7
frame_dig -1
app_global_put
retsub

// get_reserved_app_state_val
getreservedappstateval_17:
proto 1 1
intc_0 // 0
bytec_2 // 0x00
intc_0 // 0
frame_dig -1
setbyte
callsub prefixkeygen_7
app_global_get
frame_bury 0
retsub

// set_account_state_val
setaccountstateval_18:
proto 1 0
txn Sender
bytec 4 // "declared_account_value"
frame_dig -1
app_local_put
retsub

// incr_account_state_val
incraccountstateval_19:
proto 1 0
txn Sender
bytec 4 // "declared_account_value"
txn Sender
bytec 4 // "declared_account_value"
app_local_get
frame_dig -1
+
app_local_put
retsub

// get_account_state_val
getaccountstateval_20:
proto 0 1
intc_0 // 0
txn Sender
bytec 4 // "declared_account_value"
app_local_get
frame_bury 0
retsub

// set_reserved_account_state_val
setreservedaccountstateval_21:
proto 2 0
txn Sender
bytec_2 // 0x00
intc_0 // 0
frame_dig -2
setbyte
callsub prefixkeygen_6
frame_dig -1
extract 2 0
app_local_put
retsub

// get_reserved_account_state_val
getreservedaccountstateval_22:
proto 1 1
bytec_1 // ""
txn Sender
bytec_2 // 0x00
intc_0 // 0
frame_dig -1
setbyte
callsub prefixkeygen_6
app_local_get
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub