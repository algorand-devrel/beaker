{
    "hints": {
        "add(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "Ly8gR0VORVJBVEVEIFRFQUwgICAgLy8gICAgUEMgICAgUFlURUFMIFBBVEggICAgTElORSAgICBQWVRFQUwKI3ByYWdtYSB2ZXJzaW9uIDggICAgLy8gICAgKDApICAgZGVtby5weSAgICAgICAgOSAgICAgICBzb3VyY2VfbWFwcGVkX2FwcC5idWlsZChhYykKcHVzaGludCAwIC8vIDAgICAgICAgLy8gICAgKDEpCnJldHVybiAgICAgICAgICAgICAgIC8vICAgICgzKQ=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SourceMapped",
        "methods": [
            {
                "name": "add",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}