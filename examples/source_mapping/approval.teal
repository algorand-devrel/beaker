// GENERATED TEAL                                   //    PC     PYTEAL PATH    LINE    PYTEAL
#pragma version 8                                   //    (0)    app.py         35      source_mapped_app.build(ac)
intcblock 0 1 10                                    //    (1)
txn NumAppArgs                                      //    (6)
intc_0 // 0                                         //    (8)
==                                                  //    (9)
bnz main_l4                                         //    (10)
txna ApplicationArgs 0                              //    (13)
pushbytes 0xfe6bdf69 // "add(uint64,uint64)uint64"  //    (16)
==                                                  //    (22)
bnz main_l3                                         //    (23)
err                                                 //    (26)
main_l3:                                            //
txn OnCompletion                                    //    (27)
intc_0 // NoOp                                      //    (29)
==                                                  //    (30)
txn ApplicationID                                   //    (31)
intc_0 // 0                                         //    (33)
!=                                                  //    (34)
&&                                                  //    (35)
assert                                              //    (36)
callsub addcaster_1                                 //    (37)
intc_1 // 1                                         //    (40)
return                                              //    (41)
main_l4:                                            //
txn OnCompletion                                    //    (42)
intc_0 // NoOp                                      //    (44)
==                                                  //    (45)
bnz main_l6                                         //    (46)
err                                                 //    (49)
main_l6:                                            //
txn ApplicationID                                   //    (50)
intc_0 // 0                                         //    (52)
==                                                  //    (53)
assert                                              //    (54)
intc_1 // 1                                         //    (55)
return                                              //    (56)
                                                    //                          23      def add(a: abi.Uint64, b: abi.Uint64, *, output: abi.Uint64) -> Expr:
// add                                              //
add_0:                                              //
proto 2 1                                           //    (57)
intc_0 // 0                                         //    (60)                  35      source_mapped_app.build(ac)
frame_dig -2                                        //    (61)                  25      a.get()
intc_2 // 10                                        //    (63)                          Int(10)
>                                                   //    (64)                          a.get() > Int(10)
// a must be > 10                                   //                          35      source_mapped_app.build(ac)
assert                                              //    (65)                  25      Assert(a.get() > Int(10), comment='a must be > 10')
frame_dig -1                                        //    (66)                  26      b.get()
intc_2 // 10                                        //    (68)                          Int(10)
<                                                   //    (69)                          b.get() < Int(10)
// b must be < 10                                   //                          35      source_mapped_app.build(ac)
assert                                              //    (70)                  26      Assert(b.get() < Int(10), comment='b must be < 10')
frame_dig -2                                        //    (71)                  27      a.get()
frame_dig -1                                        //    (73)                          b.get()
+                                                   //    (75)                          a.get() + b.get()
frame_bury 0                                        //    (76)                          output.set(a.get() + b.get())
retsub                                              //    (78)                  23      def add(a: abi.Uint64, b: abi.Uint64, *, output: abi.Uint64) -> Expr:
                                                    //                          35      source_mapped_app.build(ac)
// add_caster                                       //
addcaster_1:                                        //
proto 0 0                                           //    (79)
intc_0 // 0                                         //    (82)
dupn 2                                              //    (83)
txna ApplicationArgs 1                              //    (85)
btoi                                                //    (88)
frame_bury 1                                        //    (89)
txna ApplicationArgs 2                              //    (91)
btoi                                                //    (94)
frame_bury 2                                        //    (95)
frame_dig 1                                         //    (97)                  23      def add(a: abi.Uint64, b: abi.Uint64, *, output: abi.Uint64) -> Expr:
frame_dig 2                                         //    (99)
callsub add_0                                       //    (101)                 35      source_mapped_app.build(ac)
frame_bury 0                                        //    (104)
pushbytes 0x151f7c75 // 0x151f7c75                  //    (106)
frame_dig 0                                         //    (112)
itob                                                //    (114)
concat                                              //    (115)
log                                                 //    (116)
retsub                                              //    (117)