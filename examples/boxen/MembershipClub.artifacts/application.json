{
    "hints": {
        "bootstrap": {
            "config": {
                "no_op": "CALL"
            }
        },
        "remove_member": {
            "config": {
                "no_op": "CALL"
            }
        },
        "add_member": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token",
                    "stack_type": "uint64"
                }
            },
            "config": {
                "no_op": "CALL"
            }
        },
        "get_membership_record": {
            "structs": {
                "output": {
                    "name": "MembershipRecord",
                    "elements": [
                        [
                            "role",
                            "uint8"
                        ],
                        [
                            "voted",
                            "bool"
                        ]
                    ]
                }
            },
            "config": {
                "no_op": "CALL"
            }
        },
        "set_affirmation": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token",
                    "stack_type": "uint64"
                }
            },
            "config": {
                "no_op": "CALL"
            }
        },
        "get_affirmation": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token",
                    "stack_type": "uint64"
                }
            },
            "config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSA2NApieXRlY2Jsb2NrIDB4NmQ2NTZkNjI2NTcyNzM2ODY5NzA1Zjc0NmY2YjY1NmUgMHggMHgxNTFmN2M3NSAweDYxNjY2NjY5NzI2ZDYxNzQ2OTZmNmU3MyAweDAwCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wxNAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDU0ZDJkNjZkIC8vICJib290c3RyYXAocGF5LHN0cmluZyl1aW50NjQiCj09CmJueiBtYWluX2wxMwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDkyZWJmNmRlIC8vICJyZW1vdmVfbWVtYmVyKGFkZHJlc3Mpdm9pZCIKPT0KYm56IG1haW5fbDEyCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZGNlMzUxMzggLy8gImFkZF9tZW1iZXIoYWNjb3VudCxhc3NldCl2b2lkIgo9PQpibnogbWFpbl9sMTEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhjOGQwZDI0MyAvLyAiZ2V0X21lbWJlcnNoaXBfcmVjb3JkKGFkZHJlc3MpKHVpbnQ4LGJvb2wpIgo9PQpibnogbWFpbl9sMTAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgzNTEyOGE5OSAvLyAic2V0X2FmZmlybWF0aW9uKHVpbnQxNixieXRlWzY0XSxhc3NldCl2b2lkIgo9PQpibnogbWFpbl9sOQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGQxMWE1ZDRmIC8vICJnZXRfYWZmaXJtYXRpb24oYXNzZXQpYnl0ZVs2NF0iCj09CmJueiBtYWluX2w4CmVycgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKY2FsbHN1YiBnZXRhZmZpcm1hdGlvbl8xMQpzdG9yZSAxNwpieXRlY18yIC8vIDB4MTUxZjdjNzUKbG9hZCAxNwpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmV4dHJhY3RfdWludDE2CnN0b3JlIDE0CnR4bmEgQXBwbGljYXRpb25BcmdzIDIKc3RvcmUgMTUKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDE2CmxvYWQgMTQKbG9hZCAxNQpsb2FkIDE2CmNhbGxzdWIgc2V0YWZmaXJtYXRpb25fOQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTA6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBnZXRtZW1iZXJzaGlwcmVjb3JkXzcKc3RvcmUgMTMKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmxvYWQgMTMKY29uY2F0CmxvZwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTE6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKaW50Y18wIC8vIDAKZ2V0Ynl0ZQpzdG9yZSAxMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgMTIKbG9hZCAxMQpsb2FkIDEyCmNhbGxzdWIgYWRkbWVtYmVyXzYKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEyOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgcmVtb3ZlbWVtYmVyXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEzOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDkKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpzdG9yZSA4CmxvYWQgOApndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApsb2FkIDgKbG9hZCA5CmNhbGxzdWIgYm9vdHN0cmFwXzIKc3RvcmUgMTAKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmxvYWQgMTAKaXRvYgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQpibnogbWFpbl9sMTYKZXJyCm1haW5fbDE2Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKcHJvdG8gMCAwCmludGNfMSAvLyAxCnJldHVybgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5XzE6CnByb3RvIDEgMQpmcmFtZV9kaWcgLTEKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gYm9vdHN0cmFwCmJvb3RzdHJhcF8yOgpwcm90byAyIDEKaW50Y18wIC8vIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzEKLy8gdW5hdXRob3JpemVkCmFzc2VydApmcmFtZV9kaWcgLTIKZ3R4bnMgUmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KLy8gcGF5bWVudCBtdXN0IGJlIHRvIGFwcCBhZGRyZXNzCmFzc2VydApmcmFtZV9kaWcgLTIKZ3R4bnMgQW1vdW50CnB1c2hpbnQgMzY1ODUwMCAvLyAzNjU4NTAwCj49Ci8vIHBheW1lbnQgbXVzdCBiZSBmb3IgPj0gMzY1ODUwMAphc3NlcnQKYnl0ZWNfMyAvLyAiYWZmaXJtYXRpb25zIgpwdXNoaW50IDY0MCAvLyA2NDAKYm94X2NyZWF0ZQpwb3AKaXR4bl9iZWdpbgpwdXNoaW50IDMgLy8gYWNmZwppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TmFtZQpwdXNoaW50IDEwMDAgLy8gMTAwMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VG90YWwKaW50Y18xIC8vIDEKaXR4bl9maWVsZCBDb25maWdBc3NldERlZmF1bHRGcm96ZW4KZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBDb25maWdBc3NldE1hbmFnZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBDb25maWdBc3NldENsYXdiYWNrCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQ29uZmlnQXNzZXRGcmVlemUKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBDb25maWdBc3NldFJlc2VydmUKaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGZWUKaXR4bl9zdWJtaXQKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAibWVtYmVyc2hpcF90b2tlbiIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgMQpzdG9yZSAwCmxvYWQgMQohCmFzc2VydApieXRlY18wIC8vICJtZW1iZXJzaGlwX3Rva2VuIgppdHhuIENyZWF0ZWRBc3NldElECmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gIm1lbWJlcnNoaXBfdG9rZW4iCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV8zOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHJlbW92ZV9tZW1iZXIKcmVtb3ZlbWVtYmVyXzQ6CnByb3RvIDEgMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMwovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmZyYW1lX2RpZyAtMQpib3hfZGVsCnBvcApyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV81Ogpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIGFkZF9tZW1iZXIKYWRkbWVtYmVyXzY6CnByb3RvIDIgMAppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMSAvLyAiIgppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMSAvLyAiIgpkdXAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzUKLy8gdW5hdXRob3JpemVkCmFzc2VydAppbnRjXzAgLy8gMApmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKcHVzaGludCAyNTYgLy8gMjU2CjwKYXNzZXJ0CmludGNfMCAvLyAwCiEKIQpmcmFtZV9idXJ5IDEKYnl0ZWMgNCAvLyAweDAwCmludGNfMCAvLyAwCmZyYW1lX2RpZyAwCnNldGJ5dGUKYnl0ZWMgNCAvLyAweDAwCmludGNfMCAvLyAwCmZyYW1lX2RpZyAxCnNldGJpdApjb25jYXQKZnJhbWVfYnVyeSAyCmZyYW1lX2RpZyAtMgp0eG5hcyBBY2NvdW50cwpib3hfZGVsCnBvcApmcmFtZV9kaWcgLTIKdHhuYXMgQWNjb3VudHMKZnJhbWVfZGlnIDIKYm94X3B1dAppdHhuX2JlZ2luCnB1c2hpbnQgNCAvLyBheGZlcgppdHhuX2ZpZWxkIFR5cGVFbnVtCmJ5dGVjXzAgLy8gIm1lbWJlcnNoaXBfdG9rZW4iCmFwcF9nbG9iYWxfZ2V0Cml0eG5fZmllbGQgWGZlckFzc2V0CmludGNfMSAvLyAxCml0eG5fZmllbGQgQXNzZXRBbW91bnQKZnJhbWVfZGlnIC0yCnR4bmFzIEFjY291bnRzCml0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwppdHhuX2ZpZWxkIEFzc2V0U2VuZGVyCml0eG5fc3VibWl0CnJldHN1YgoKLy8gZ2V0X21lbWJlcnNoaXBfcmVjb3JkCmdldG1lbWJlcnNoaXByZWNvcmRfNzoKcHJvdG8gMSAxCmJ5dGVjXzEgLy8gIiIKZnJhbWVfZGlnIC0xCmJveF9nZXQKc3RvcmUgMwpzdG9yZSAyCmxvYWQgMwphc3NlcnQKbG9hZCAyCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGF1dGhfaG9sZHNfdG9rZW4KYXV0aGhvbGRzdG9rZW5fODoKcHJvdG8gMSAxCmZyYW1lX2RpZyAtMQpieXRlY18wIC8vICJtZW1iZXJzaGlwX3Rva2VuIgphcHBfZ2xvYmFsX2dldAphc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKc3RvcmUgNQpzdG9yZSA0CmxvYWQgNQpsb2FkIDQKaW50Y18wIC8vIDAKPgomJgpyZXRzdWIKCi8vIHNldF9hZmZpcm1hdGlvbgpzZXRhZmZpcm1hdGlvbl85Ogpwcm90byAzIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhob2xkc3Rva2VuXzgKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18zIC8vICJhZmZpcm1hdGlvbnMiCmludGNfMiAvLyA2NApmcmFtZV9kaWcgLTMKKgpmcmFtZV9kaWcgLTIKYm94X3JlcGxhY2UKcmV0c3ViCgovLyBhdXRoX2hvbGRzX3Rva2VuCmF1dGhob2xkc3Rva2VuXzEwOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmJ5dGVjXzAgLy8gIm1lbWJlcnNoaXBfdG9rZW4iCmFwcF9nbG9iYWxfZ2V0CmFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQpzdG9yZSA3CnN0b3JlIDYKbG9hZCA3CmxvYWQgNgppbnRjXzAgLy8gMAo+CiYmCnJldHN1YgoKLy8gZ2V0X2FmZmlybWF0aW9uCmdldGFmZmlybWF0aW9uXzExOgpwcm90byAxIDEKYnl0ZWNfMSAvLyAiIgp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aGhvbGRzdG9rZW5fMTAKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18zIC8vICJhZmZpcm1hdGlvbnMiCmludGNfMiAvLyA2NApnbG9iYWwgUm91bmQKcHVzaGludCAxMCAvLyAxMAolCioKaW50Y18yIC8vIDY0CmJveF9leHRyYWN0CmZyYW1lX2J1cnkgMAppbnRjXzIgLy8gNjQKZnJhbWVfZGlnIDAKbGVuCj09CmFzc2VydApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "membership_token": {
                    "type": "uint64",
                    "key": "membership_token",
                    "descr": "The asset that represents membership of this club"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "MembershipClub",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "seed"
                    },
                    {
                        "type": "string",
                        "name": "token_name"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "create membership token and receive initial seed payment"
            },
            {
                "name": "remove_member",
                "args": [
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "add_member",
                "args": [
                    {
                        "type": "account",
                        "name": "new_member"
                    },
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_membership_record",
                "args": [
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "returns": {
                    "type": "(uint8,bool)"
                }
            },
            {
                "name": "set_affirmation",
                "args": [
                    {
                        "type": "uint16",
                        "name": "idx"
                    },
                    {
                        "type": "byte[64]",
                        "name": "affirmation"
                    },
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_affirmation",
                "args": [
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "byte[64]"
                }
            }
        ],
        "networks": {}
    }
}