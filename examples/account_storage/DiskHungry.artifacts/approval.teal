#pragma version 8
intcblock 127 0 1 8 128 255
bytecblock 0x 0x000102030405060708090a0b0c0d0e0f 0x0680003500810143
txn NumAppArgs
intc_1 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x76e3c6dc // "add_account(byte[])void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x19b14fda // "flip_bit(account,uint32)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_1 // NoOp
==
txn ApplicationID
intc_1 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_1 // 0
getbyte
store 8
txna ApplicationArgs 2
intc_1 // 0
extract_uint32
store 9
load 8
load 9
callsub flipbit_6
intc_2 // 1
return
main_l5:
txn OnCompletion
intc_2 // OptIn
==
txn ApplicationID
intc_1 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub addaccount_5
intc_2 // 1
return
main_l6:
txn OnCompletion
intc_1 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_1 // 0
==
assert
callsub create_1
intc_2 // 1
return

// encode_uvarint_impl
encodeuvarintimpl_0:
store 2
store 1
load 2
load 1
intc 4 // 128
>=
bnz encodeuvarintimpl_0_l2
load 1
intc 5 // 255
&
itob
extract 7 1
b encodeuvarintimpl_0_l3
encodeuvarintimpl_0_l2:
load 1
pushint 7 // 7
shr
load 1
intc 5 // 255
&
intc 4 // 128
|
itob
extract 7 1
load 1
load 2
uncover 3
uncover 3
callsub encodeuvarintimpl_0
cover 2
store 2
store 1
encodeuvarintimpl_0_l3:
concat
retsub

// create
create_1:
intc_2 // 1
return

// zero_impl
zeroimpl_2:
store 0
load 0
pushbytes 0x00 // 0x00
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x01 // 0x01
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x02 // 0x02
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x03 // 0x03
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x04 // 0x04
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x05 // 0x05
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x06 // 0x06
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x07 // 0x07
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x08 // 0x08
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x09 // 0x09
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0a // 0x0a
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0b // 0x0b
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0c // 0x0c
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0d // 0x0d
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0e // 0x0e
intc_0 // 127
bzero
app_local_put
load 0
pushbytes 0x0f // 0x0f
intc_0 // 127
bzero
app_local_put
retsub

// get_byte_impl
getbyteimpl_3:
store 3
bytec_1 // 0x000102030405060708090a0b0c0d0e0f
load 3
intc_0 // 127
/
intc_2 // 1
extract3
app_local_get
load 3
intc_0 // 127
%
getbyte
retsub

// set_byte_impl
setbyteimpl_4:
store 6
store 5
store 4
bytec_1 // 0x000102030405060708090a0b0c0d0e0f
load 5
intc_0 // 127
/
intc_2 // 1
extract3
store 7
load 4
load 7
load 4
load 7
app_local_get
load 5
intc_0 // 127
%
load 6
setbyte
app_local_put
retsub

// add_account
addaccount_5:
store 10
txn Sender
pushbytes 0x50726f6772616d // "Program"
callsub populatetemplateprogram_7
concat
sha512_256
==
assert
txn RekeyTo
global CurrentApplicationAddress
==
assert
txn Sender
callsub zeroimpl_2
retsub

// flip_bit
flipbit_6:
store 16
store 15
load 15
txnas Accounts
load 16
intc_3 // 8
/
callsub getbyteimpl_3
store 17
load 17
load 16
intc_3 // 8
%
load 17
load 16
intc_3 // 8
%
getbit
!
setbit
store 17
load 15
txnas Accounts
load 16
intc_3 // 8
/
load 17
callsub setbyteimpl_4
retsub

// populate_template_program
populatetemplateprogram_7:
intc_1 // 0
store 11
intc_1 // 0
store 12
bytec_0 // ""
store 13
bytec_0 // ""
store 14
load 10
extract 2 0
len
bytec_0 // ""
callsub encodeuvarintimpl_0
load 10
extract 2 0
concat
store 13
load 14
bytec_2 // 0x0680003500810143
load 11
pushint 2 // 2
substring3
concat
load 13
concat
store 14
load 12
load 13
len
+
intc_2 // 1
-
store 12
pushint 2 // 2
intc_2 // 1
+
store 11
load 14
bytec_2 // 0x0680003500810143
load 11
dig 1
len
substring3
concat
store 14
load 14
retsub