{
    "hints": {},
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEyNyAwIDEgOCAxMjggMjU1CmJ5dGVjYmxvY2sgMHggMHgwODgwMDAzNTAwODEwMTQzIDB4MDAwMTAyMDMwNDA1MDYwNzA4MDkwYTBiMGMwZDBlMGYKdHhuIE51bUFwcEFyZ3MKaW50Y18xIC8vIDAKPT0KYm56IG1haW5fbDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg3NmUzYzZkYyAvLyAiYWRkX2FjY291bnQoYnl0ZVtdKXZvaWQiCj09CmJueiBtYWluX2w1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MTliMTRmZGEgLy8gImZsaXBfYml0KGFjY291bnQsdWludDMyKXZvaWQiCj09CmJueiBtYWluX2w0CmVycgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMSAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMSAvLyAwCmdldGJ5dGUKc3RvcmUgMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmludGNfMSAvLyAwCmV4dHJhY3RfdWludDMyCnN0b3JlIDEKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIGZsaXBiaXRfMgppbnRjXzIgLy8gMQpyZXR1cm4KbWFpbl9sNToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzIgLy8gT3B0SW4KPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18xIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBhZGRhY2NvdW50XzEKaW50Y18yIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE5vT3AKPT0KYm56IG1haW5fbDgKZXJyCm1haW5fbDg6CnR4biBBcHBsaWNhdGlvbklECmludGNfMSAvLyAwCj09CmFzc2VydApjYWxsc3ViIGNyZWF0ZV8wCmludGNfMiAvLyAxCnJldHVybgoKLy8gY3JlYXRlCmNyZWF0ZV8wOgpwcm90byAwIDAKaW50Y18yIC8vIDEKcmV0dXJuCgovLyBhZGRfYWNjb3VudAphZGRhY2NvdW50XzE6CnByb3RvIDEgMAp0eG4gU2VuZGVyCnB1c2hieXRlcyAweDUwNzI2ZjY3NzI2MTZkIC8vICJQcm9ncmFtIgppbnRjXzEgLy8gMApzdG9yZSAyCmludGNfMSAvLyAwCnN0b3JlIDMKYnl0ZWNfMCAvLyAiIgpzdG9yZSA0CmJ5dGVjXzAgLy8gIiIKc3RvcmUgNQpmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKbGVuCmJ5dGVjXzAgLy8gIiIKY2FsbHN1YiBlbmNvZGV1dmFyaW50aW1wbF8zCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMApjb25jYXQKc3RvcmUgNApsb2FkIDUKYnl0ZWNfMSAvLyAweDA4ODAwMDM1MDA4MTAxNDMKbG9hZCAyCnB1c2hpbnQgMiAvLyAyCnN1YnN0cmluZzMKY29uY2F0CmxvYWQgNApjb25jYXQKc3RvcmUgNQpsb2FkIDMKbG9hZCA0CmxlbgorCmludGNfMiAvLyAxCi0Kc3RvcmUgMwpwdXNoaW50IDIgLy8gMgppbnRjXzIgLy8gMQorCnN0b3JlIDIKbG9hZCA1CmJ5dGVjXzEgLy8gMHgwODgwMDAzNTAwODEwMTQzCmxvYWQgMgpkaWcgMQpsZW4Kc3Vic3RyaW5nMwpjb25jYXQKc3RvcmUgNQpsb2FkIDUKY29uY2F0CnNoYTUxMl8yNTYKPT0KYXNzZXJ0CnR4biBSZWtleVRvCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydAp0eG4gU2VuZGVyCmNhbGxzdWIgaW1wbF80CnJldHN1YgoKLy8gZmxpcF9iaXQKZmxpcGJpdF8yOgpwcm90byAyIDAKZnJhbWVfZGlnIC0yCnR4bmFzIEFjY291bnRzCmZyYW1lX2RpZyAtMQppbnRjXzMgLy8gOAovCmNhbGxzdWIgaW1wbF81CnN0b3JlIDYKbG9hZCA2CmZyYW1lX2RpZyAtMQppbnRjXzMgLy8gOAolCmxvYWQgNgpmcmFtZV9kaWcgLTEKaW50Y18zIC8vIDgKJQpnZXRiaXQKIQpzZXRiaXQKc3RvcmUgNgpmcmFtZV9kaWcgLTIKdHhuYXMgQWNjb3VudHMKZnJhbWVfZGlnIC0xCmludGNfMyAvLyA4Ci8KbG9hZCA2CmNhbGxzdWIgaW1wbF82CnJldHN1YgoKLy8gZW5jb2RlX3V2YXJpbnRfaW1wbAplbmNvZGV1dmFyaW50aW1wbF8zOgpwcm90byAyIDEKZnJhbWVfZGlnIC0xCmZyYW1lX2RpZyAtMgppbnRjIDQgLy8gMTI4Cj49CmJueiBlbmNvZGV1dmFyaW50aW1wbF8zX2wyCmZyYW1lX2RpZyAtMgppbnRjIDUgLy8gMjU1CiYKaXRvYgpleHRyYWN0IDcgMQpiIGVuY29kZXV2YXJpbnRpbXBsXzNfbDMKZW5jb2RldXZhcmludGltcGxfM19sMjoKZnJhbWVfZGlnIC0yCnB1c2hpbnQgNyAvLyA3CnNocgpmcmFtZV9kaWcgLTIKaW50YyA1IC8vIDI1NQomCmludGMgNCAvLyAxMjgKfAppdG9iCmV4dHJhY3QgNyAxCmNhbGxzdWIgZW5jb2RldXZhcmludGltcGxfMwplbmNvZGV1dmFyaW50aW1wbF8zX2wzOgpjb25jYXQKcmV0c3ViCgovLyBfaW1wbAppbXBsXzQ6CnByb3RvIDEgMApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MDAgLy8gMHgwMAppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCnB1c2hieXRlcyAweDAxIC8vIDB4MDEKaW50Y18wIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAtMQpwdXNoYnl0ZXMgMHgwMiAvLyAweDAyCmludGNfMCAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MDMgLy8gMHgwMwppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCnB1c2hieXRlcyAweDA0IC8vIDB4MDQKaW50Y18wIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAtMQpwdXNoYnl0ZXMgMHgwNSAvLyAweDA1CmludGNfMCAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MDYgLy8gMHgwNgppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCnB1c2hieXRlcyAweDA3IC8vIDB4MDcKaW50Y18wIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAtMQpwdXNoYnl0ZXMgMHgwOCAvLyAweDA4CmludGNfMCAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MDkgLy8gMHgwOQppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCnB1c2hieXRlcyAweDBhIC8vIDB4MGEKaW50Y18wIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAtMQpwdXNoYnl0ZXMgMHgwYiAvLyAweDBiCmludGNfMCAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MGMgLy8gMHgwYwppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCnB1c2hieXRlcyAweDBkIC8vIDB4MGQKaW50Y18wIC8vIDEyNwpiemVybwphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAtMQpwdXNoYnl0ZXMgMHgwZSAvLyAweDBlCmludGNfMCAvLyAxMjcKYnplcm8KYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKcHVzaGJ5dGVzIDB4MGYgLy8gMHgwZgppbnRjXzAgLy8gMTI3CmJ6ZXJvCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBfaW1wbAppbXBsXzU6CnByb3RvIDIgMQpmcmFtZV9kaWcgLTIKYnl0ZWNfMiAvLyAweDAwMDEwMjAzMDQwNTA2MDcwODA5MGEwYjBjMGQwZTBmCmZyYW1lX2RpZyAtMQppbnRjXzAgLy8gMTI3Ci8KaW50Y18yIC8vIDEKZXh0cmFjdDMKYXBwX2xvY2FsX2dldApmcmFtZV9kaWcgLTEKaW50Y18wIC8vIDEyNwolCmdldGJ5dGUKcmV0c3ViCgovLyBfaW1wbAppbXBsXzY6CnByb3RvIDMgMApieXRlY18yIC8vIDB4MDAwMTAyMDMwNDA1MDYwNzA4MDkwYTBiMGMwZDBlMGYKZnJhbWVfZGlnIC0yCmludGNfMCAvLyAxMjcKLwppbnRjXzIgLy8gMQpleHRyYWN0MwpzdG9yZSA3CmZyYW1lX2RpZyAtMwpsb2FkIDcKZnJhbWVfZGlnIC0zCmxvYWQgNwphcHBfbG9jYWxfZ2V0CmZyYW1lX2RpZyAtMgppbnRjXzAgLy8gMTI3CiUKZnJhbWVfZGlnIC0xCnNldGJ5dGUKYXBwX2xvY2FsX3B1dApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DiskHungry",
        "methods": [
            {
                "name": "add_account",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "nonce"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "flip_bit",
                "args": [
                    {
                        "type": "account",
                        "name": "nonce_acct"
                    },
                    {
                        "type": "uint32",
                        "name": "bit_idx"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Allows caller to flip a bit at a given index for some\naccount that has already opted in"
            }
        ],
        "networks": {}
    }
}