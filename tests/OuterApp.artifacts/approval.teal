#pragma version 8
intcblock 0 1 128 255
bytecblock 0x 0x0880003500810143
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0xf6dfa56f // "doit(byte[])uint64"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub doit_2
store 0
pushbytes 0x151f7c75 // 0x151f7c75
load 0
itob
concat
log
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l6
err
main_l6:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_1
intc_1 // 1
return

// encode_uvarint_impl
encodeuvarintimpl_0:
proto 2 1
frame_dig -1
frame_dig -2
intc_2 // 128
>=
bnz encodeuvarintimpl_0_l2
frame_dig -2
intc_3 // 255
&
itob
extract 7 1
b encodeuvarintimpl_0_l3
encodeuvarintimpl_0_l2:
frame_dig -2
pushint 7 // 7
shr
frame_dig -2
intc_3 // 255
&
intc_2 // 128
|
itob
extract 7 1
callsub encodeuvarintimpl_0
encodeuvarintimpl_0_l3:
concat
retsub

// create
create_1:
proto 0 0
intc_1 // 1
return

// doit
doit_2:
proto 1 1
intc_0 // 0
txn Sender
pushbytes 0x50726f6772616d // "Program"
intc_0 // 0
store 1
intc_0 // 0
store 2
bytec_0 // ""
store 3
bytec_0 // ""
store 4
frame_dig -1
extract 2 0
len
bytec_0 // ""
callsub encodeuvarintimpl_0
frame_dig -1
extract 2 0
concat
store 3
load 4
bytec_1 // 0x0880003500810143
load 1
pushint 2 // 2
substring3
concat
load 3
concat
store 4
load 2
load 3
len
+
intc_1 // 1
-
store 2
pushint 2 // 2
intc_1 // 1
+
store 1
load 4
bytec_1 // 0x0880003500810143
load 1
dig 1
len
substring3
concat
store 4
load 4
concat
sha512_256
==
assert
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushbytes 0x0820020001311b2212400001003119221240000100311822124488000223438a00002343 // 0x0820020001311b2212400001003119221240000100311822124488000223438a00002343
itxn_field ApprovalProgram
pushbytes 0x08810043 // 0x08810043
itxn_field ClearStateProgram
intc_0 // 0
itxn_field Fee
itxn_submit
itxn CreatedApplicationID
frame_bury 0
retsub